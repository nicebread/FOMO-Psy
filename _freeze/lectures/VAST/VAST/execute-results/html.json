{
  "hash": "0d602f55f396d013eb83267a8d319358",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"How to formalize a verbal theory with VAST\"\nsubtitle: \"Visual Argument Structure Tool (VAST) by Leising, Grenke & Cramer\"\nauthor:\n  - name: Daniel Leising\n    orcid: 0000-0001-8503-5840\n    email: Daniel.Leising@tu-dresden.de\n    affiliations: Technical University Dresden\n  - name: Felix Schönbrodt\n    orcid: 0000-0002-8282-3910\n    email: felix.schoenbrodt@psy.lmu.de\n    affiliations: Ludwig-Maximilians-Universität München\ndate: 2023-11-17\nfooter: \"Formal modeling in psychology - Empirisches Praktikum, Ludwig-Maximilians-Universität München\"\nformat: \n  nicetheme-revealjs: \n    output-ext: slide.html\n  html: default\nrevealjs-plugins:\n  - attribution \n---\n\n\n\n\n\n## Where do theories come from?\n\n:::: {.columns}\n::: {.column width='70%'}\n- Falsificationism starts with a (tentative) theory, which is repeatedly tested, refuted, and refined.\n- But where does the initial theory come from? \"Flair\"? Flash of inspiration in the shower?\n- Popper did not care much about the first stage of creating theories - just about the later testing of theories.\n\n\n**Conjecture**: We have a refined methodology¹ to *test* theories (e.g., experimental designs, statistical methods, preregistration, ...). [But we had (so far) no good methodology for constructing theories.]{.hl}\n\n::: {style=\"font-size: 50%;\"}\n¹ \"A scientific methodology is an ordered series of steps that assist a researcher in reaching a desired end state from a specified starting point.\" (Borsboom et al., 2021)\n:::\n:::\n\n::: {.column width='30%'}\n![Sir Karl Popper, 1902 - 1994](img/Karl_Popper.jpg)\n:::\n::::\n\n::: {.notes}\n\"Abduction\" actually refers to the process of coming up with a theory.\n:::\n\n\n# Visual Argument Structure Tool (VAST) V1.0\n\n::: footer\nLeising, D., Grenke, O., & Cramer, M. (2023). Visual Argument Structure Tool (VAST) Version 1.0. Meta-Psychology, 7. [https://doi.org/10.15626/MP.2021.2911](https://doi.org/10.15626/MP.2021.2911)\n:::\n\n\n\n## Introduction\n\nThis is a brief introduction into some of the core features of VAST.\nIn doing this, I will simplify a few features and ignore others completely.\n\n::: {.svg-h100 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n    layout=neato;\n    X [shape=box, label=\"X\", pos=\"0,0!\"];\n    Y [shape=box, label=\"Y\", pos=\"2, 0!\"];\n    X -> Y [label=\"p\"];\n}\n```\n\n\n\n:::\n\n\n## Types of elements (selection)\n![](img/VAST_elements.png)\n\n\n## Arrows stand for IF-THEN relationships\n### If X, THEN Y\n\n::: {.svg-h50 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n  layout=neato;\n  X [shape=box, label=\"X\", pos=\"0,0!\"];\n  Y [shape=box, label=\"Y\", pos=\"2, 0!\"];\n  X -> Y;\n}\n```\n\n\n\n:::\n\nSix types of relationships:\n\n- naming (**n**)\n- conceptual implication (**i**)\n- causation (**c**)\n- prediction (**p**)\n- transformation (**t**)\n- reasoning (**r**)\n\n\n## Naming concepts\n\n\n:::: {.columns}\n\n::: {.column width='50%'}\n::: {.svg-w400 .svg-h200 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n  layout=neato;\n  I [shape=box, label=\"I\", pos=\"0, 0!\"];\n  I_n [shape=box, label=\"\\\"Intelligent\\\"\",pos=\"2,0!\"];\n  I -> I_n [label=\"n\"];\n}  \n```\n\n\n\n:::\n:::\n\n::: {.column width='50%'}\n::: {.svg-w400 .svg-h200 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n  layout=neato;\n  I [shape=box, label=\"I\", pos=\"0, 0!\"];\n  I_n [shape=box, label=\"\\\"For example, this entire\\nsentence here may also\\nbe used as a name\\nin a VAST display\\\"\", pos=\"2,0!\"];\n  I -> I_n [label=\"n\"];\n}  \n```\n\n\n\n:::\n:::\n::::\n\n\n- The `I` in the box symbolizes a **concept** \n  - A concept is an idea about a condition that may or may not apply to certain objects (e.g., people)\n  - The **labels** of concepts (i.e., `I`) are abstract and basically arbitrary  \n- The `n` stands for a naming relationship\n- A **name** is a word (or sentence, or paragraph) that is used to describe those objects to which a concept applies. Names (or \"labels\") are set in quotation marks `\"\"` in VAST displays.\n\n\n\n## Naming concepts\n### Synonyms\n\n::: {.svg-h300 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n  layout=neato;\n  I [shape=box, label=\"I\", pos=\"0, 1!\"];\n  I_n [shape=box, label=\"\\\"Intelligent\\\"\", pos=\"2,0!\"];\n  B_n [shape=box, label=\"\\\"Bright\\\"\", pos=\"2,1!\"];\n  S_n [shape=box, label=\"\\\"Smart\\\"\", pos=\"2,2!\"];\n  I -> I_n [label=\"n\"];\n  I -> B_n [label=\"n\"];\n  I -> S_n [label=\"n\"];\n}  \n```\n\n\n\n:::\n\nA concept may have any number of names. Here, all three names are synonyms regarding concept `I`.\n\n\n\n\n## Naming concepts\n### Homonyms\n\n::: {.svg-h300 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n  layout=neato;\n  F [shape=box, label=\"F\", pos=\"0, 0!\"];\n  T [shape=box, label=\"T\", pos=\"0, 2!\"];\n  B_n [shape=box, label=\"\\\"Big\\\"\", pos=\"2,1!\"];\n  F -> B_n [label=\"n\"];\n  T -> B_n [label=\"n\"];\n}\n```\n\n\n\n:::\n\nThis expresses the idea that the same name is used for conditions that may not be the same.\nThis name might thus be a **homonym.**\n\n\n\n## Naming concepts\n### Visualizing a jingle-jangle situation\n\n:::: {.columns}\n\n::: {.column width='60%'}\n::: {.svg-w400 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n  // Use neato layout engine to allow manual positioning\n  layout=neato;\n\n  // Nodes with manually assigned positions\n  F [label=\"F\", shape=box, pos=\"0,2!\"];\n  T [label=\"T\", shape=box, pos=\"0,0!\"];\n  F_n [label=\"\\\"Famous\\\"\", shape=box, pos=\"2,3!\"];\n  B_n [label=\"\\\"Big\\\"\", shape=box, pos=\"2,1!\"];\n  T_n [label=\"\\\"Tall\\\"\", shape=box, pos=\"2,-1!\"];\n  \n  // Edges with labels and arrowheads\n  F -> F_n [label=\"n\"];\n  F -> B_n [label=\"n\"];\n  T -> B_n [label=\"n\"];\n  T -> T_n [label=\"n\"];\n}\n\n```\n\n\n\n:::\n:::\n\n::: {.column width='40%'}\n- \"Big\" = jingle for `F` and `T`\n- \"Big\" and \"Famous\" = jangle for `F`\n:::\n\n::::\n\n\n\n\n## Data\n\n::: {.svg-h300 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n  layout=neato;\n  T [shape=folder, label=\"T\", pos=\"0, 1!\"];\n  I_n [shape=box, label=\"\\\"Intelligent\\\"\", pos=\"2,0!\"];\n  H_n [shape=box, label=\"\\\"High Test Score\\\"\", pos=\"2,2!\"];\n  T -> I_n [label=\"n\"];\n  T -> H_n [label=\"n\"];\n}  \n```\n\n\n\n:::\n\n\n- **Data** (left box, folder-shaped) is a special kind of concept, which explicitly refers to something observable. \n  - Same as a manifest variable in Structural Equation Modeling \n- This display is supposed to capture the idea that \"Intelligence is what the intelligence test measures\"\n\n## Data\n### Symbol\n\nNote: In the original VAST paper, the Data concept has a different shape (but that shape is not available in the Graphviz system used to create the graphs in this presentation):\n\n![](img/VAST_Data_folder.png)\n\n\n\n## Data\n\n::: {.svg-h400 style=\"text-align: center;\"}\n\n\n\n\n```{dot}\ndigraph G {\n    layout=neato;\n    \n    HighScoreTest1 [label=\"\\\"High Score\\nin Test 1\\\"\", pos=\"0,0!\", shape=box];\n    HighScoreTest2 [label=\"\\\"High Score\\nin Test 2\\\"\", pos=\"0,3!\", shape=box];\n    T1 [label=\"T1\", shape=folder, pos=\"0,1!\"];\n    T2 [label=\"T2\", shape=folder, pos=\"0,2!\"];\n    I [label=\"I\", shape=box, pos=\"2,1.5!\"];\n    Intelligent [label=\"\\\"Intelligent\\\"\", pos=\"4,1.5!\", shape=box];\n    \n    T1 -> HighScoreTest1 [xlabel=\"n  \"];\n    T2 -> HighScoreTest2 [label=\"n  \"];\n    T1 -> I [label=\"r \"];             \n    T2 -> I [label=\"r \"];             \n    I -> Intelligent [label=\"n\"];    \n}\n\n```\n\n\n\n:::\n\n- The `r` denotes *reasoning* relationships\n- This display is supposed to capture the idea that more than one test may be used as evidence for people‘s intelligence\n\n\n\n\n## Data\n::: {.svg-h400 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n    // Use neato layout engine to allow manual positioning\n    layout=neato;\n    \n    // Nodes with explicit (x, y) positions\n    HighScoreTest1 [label=\"\\\"High Score\\nin Test 1\\\"\", pos=\"0,0!\", shape=box];\n    HighScoreTest2 [label=\"\\\"High Score\\nin Test 2\\\"\", pos=\"0,3!\", shape=box];\n    T1 [label=\"T1\", shape=folder, pos=\"0,1!\"];\n    T2 [label=\"T2\", shape=folder, pos=\"0,2!\"];\n    I [label=\"I\", shape=box, pos=\"2,1.5!\"];\n    Intelligent [label=\"\\\"Intelligent\\\"\", pos=\"4,1.5!\", shape=box];\n    \n    // Define edges with one-sided arrows\n    T1 -> HighScoreTest1 [xlabel=\"n  \"];  // One-sided arrow from HighScoreTest1 to T1\n    T2 -> HighScoreTest2 [label=\"n  \"];  // One-sided arrow from HighScoreTest2 to T2\n    I -> T1 [label=\"c \"];               // One-sided arrow from T1 to I\n    I -> T2 [label=\"c\"];               // One-sided arrow from T2 to I\n    T1 -> T2 [label=\"p  \", dir=\"both\"];  // Double-sided arrow between T1 and T2\n    I -> Intelligent [label=\"n\"];      // One-sided arrow from I to Intelligent\n}\n\n```\n\n\n\n:::\n\n- The `p` stands for a prediction \n- The `c` stands for causal effects\n\n\n\n## Data\n::: {.svg-h300 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n    // Use neato layout engine to allow manual positioning\n    layout=neato;\n    \n    // Nodes with explicit (x, y) positions\n    HighScoreTest1 [label=\"\\\"High Score\\nin Test 1\\\"\", pos=\"0,0!\", shape=box];\n    HighScoreTest2 [label=\"\\\"High Score\\nin Test 2\\\"\", pos=\"0,3!\", shape=box];\n    T1 [label=\"T1\", shape=folder, pos=\"0,1!\"];\n    T2 [label=\"T2\", shape=folder, pos=\"0,2!\"];\n    I [label=\"I\", shape=box, pos=\"2,1.5!\"];\n    Intelligent [label=\"\\\"Intelligent\\\"\", pos=\"4,1.5!\", shape=box];\n    \n    // Define edges with one-sided arrows\n    T1 -> HighScoreTest1 [xlabel=\"n  \"];  // One-sided arrow from HighScoreTest1 to T1\n    T2 -> HighScoreTest2 [label=\"n  \"];  // One-sided arrow from HighScoreTest2 to T2\n    I -> T1 [label=\"c \"];               // One-sided arrow from T1 to I\n    I -> T2 [label=\"c\"];               // One-sided arrow from T2 to I\n    T1 -> T2 [label=\"p  \", dir=\"both\"];  // Double-sided arrow between T1 and T2\n    I -> Intelligent [label=\"n\"];      // One-sided arrow from I to Intelligent\n}\n\n```\n\n\n\n:::\n\nThis display is supposed to capture the idea that ...\n\n- The same thing has a causal effect on the outcomes of both tests \n- Therefore, the outcomes of the two tests correlate with one another \n\n\n\n## Splitting up the display elements 1\n::: {.svg-h100 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n    // Use neato layout engine to allow manual positioning\n    layout=neato;\n    \n    // Nodes with explicit (x, y) positions\n    T1 [label=\"T1\", shape=folder, pos=\"0,0!\"];\n    HighScoreTest1 [label=\"\\\"High Score\\nin Test 1\\\"\", pos=\"2,0!\", shape=box];\n    \n    T2 [label=\"T2\", shape=folder, pos=\"4,0!\"];\n    HighScoreTest2 [label=\"\\\"High Score\\nin Test 2\\\"\", pos=\"6,0!\", shape=box];\n    \n    I [label=\"I\", shape=box, pos=\"8,0!\"];\n    Intelligent [label=\"\\\"Intelligent\\\"\", pos=\"10,0!\", shape=box];\n    \n    T1 -> HighScoreTest1 [xlabel=\"n  \"];\n    T2 -> HighScoreTest2 [label=\"n  \"];\n    I -> Intelligent [label=\"n\"];    \n}\n\n```\n\n\n\n:::\n\nReadability may often be promoted by setting naming relationships aside.\n\n\n\n## Splitting up the display elements 2\n::: {.svg-h100 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n    // Use neato layout engine to allow manual positioning\n    layout=neato;\n    \n    // Nodes with explicit (x, y) positions\n    T1 [label=\"T1\", shape=folder, pos=\"0,0!\"];\n    HighScoreTest1 [label=\"\\\"High Score\\nin Test 1\\\"\", pos=\"2,0!\", shape=box];\n    \n    T2 [label=\"T2\", shape=folder, pos=\"4,0!\"];\n    HighScoreTest2 [label=\"\\\"High Score\\nin Test 2\\\"\", pos=\"6,0!\", shape=box];\n    \n    I [label=\"I\", shape=box, pos=\"8,0!\"];\n    Intelligent [label=\"\\\"Intelligent\\\"\", pos=\"10,0!\", shape=box];\n    \n    T1 -> HighScoreTest1 [xlabel=\"n  \"];\n    T2 -> HighScoreTest2 [label=\"n  \"];\n    I -> Intelligent [label=\"n\"];    \n}\n\n```\n\n\n\n:::\n\n\n::: {.svg-h200 style=\"text-align: center;\"}\n\n\n\n```{dot}\ndigraph G {\n    // Use neato layout engine to allow manual positioning\n    layout=neato;\n    \n    // Nodes with explicit (x, y) positions\n    T1_a [label=\"T1\", shape=folder, pos=\"0,0!\"];\n    T1_b [label=\"T1\", shape=folder, pos=\"3,0!\"];\n    \n    T2_a [label=\"T2\", shape=folder, pos=\"0,2!\"];\n    T2_b [label=\"T2\", shape=folder, pos=\"3,2!\"];\n\n    I [label=\"I\", shape=box, pos=\"6,1!\"];\n    \n    T1_a -> T2_a [xlabel=\"p  \", dir=\"both\"];\n    I -> T1_b [label=\"c\"];    \n    I -> T2_b [label=\"c\"];    \n}\n\n```\n\n\n\n:::\n\n\n\n<!-- TODO: Weitere Plots aus Daniels pptx hier aufnehmen -->\n\n\n## Strength of relationship\n\n- [Default interpretation]{.hl} of a directional arrow `X` &rarr; `Y`: this relationship is considered *relevant* and *positive* (i.e., the more X the more Y)\n- Relationship strength can be expressed with a number between -1 (perfect negative relationship), 0 (no relationship), and 1 (perfect positive relationship)\n  - If no number is explicitly specified: default relationship strength is \"> 0.5\"\n- The strength of a relationship can also be expressed in a vague verbal way, e.g., \"strong\", \"weak\", \"negative\", ...\n- The relationship strength can be applied to any relationship type:\n  - type `p`: \"wearing glasses\" makes it 70 percent likely for a person to also be \"smart\"\n  - type `r`: It is 90 percent reasonable to assume someone \"is in love with you\" when that person \"giggles a lot while talking to you\"\n  - type `c`: being \"obese\" makes it 50 percent likely for someone to develop \"Diabetes Type II\" as a consequence\n\n## Fuzziness as a feature\n\n- The goal are *precise* theories - but in reality, they often are (at least partially) vague and fuzzy\n- VAST allows to make this fuzziness explicit by allowing vague quantifiers of relationship strength, e.g. \"weakly positive\", \"strong\", \">0.5\"\n  - Better than assigning an arbitrary, pseudo-precise number\n  - It's about formalizing the current state/precision of a verbal theory - if it is imprecise, let's show it!\n- Show gaps, underspecifications, and inconsistencies in the theory\n\n\n## Notes on the different types of relationships\n\n- Relationships between constructs can be ...\n\t- on a theoretical level. Then it's typically a causal path (`c`)\n\t- on empirical level: A relationship has been found! This is a prediction path (`p`)\n\t- Research cycle: One author's exploratory `p`-path is the next author's theoretical `c`-path\n- Consider what you want to formalize:\n  - A certain author's theoretical point of view at a certain point in time?\n  - Or your personal, current point of view?\n  - The empirical support for a statement?\n  \n  \n\n# Steps to formalize an existing verbal theory\n\n## Step 1: Choose your starting point\n\nFormalization approaches can differ in their *starting point* (which often are not clear-cut distinct):\n\n- (A) **Start with the verbal theory**, formalize it as it is.\n  - Interpret the verbal statements, make them more precise, visualize as a VAST display\n  - Ignore empirical evidence (even if a hypothesized effect has already been empirically rejected, keep it in the model)\n  - Do not fix inconsistencies, do not improve the theory: We want to make explicit what the original author had in mind with their theory.\n- (B) **Start with robust phenomena (TCM approach)**, invent an explanatory theory and formal model\n  - Ignore existing verbal theories (which might be hard once you know them)\n  - This will (potentially) lead to an alternative theory/model to the existing theory\n- (A-B) **A-B fusion**: Starting point is the narrative theory, but you limit your formalization to those aspects which are (a) theoretically central OR (b) relate to robust phenomena.\n\n\n\n## Step 2: Limit your scope\n\nMost theories in psychology are too fuzzy and broad to be formalized in one go. Limit your scope:\n\n- Limit the number of **constructs** and their **relationships**: Start with a small number of constructs, and add complexity later.\n- Limit the number of **phenomena** that your model is supposed to explain.\n\n## Step 3: Collect definitions of constructs, with reference to the literature.\n\n- Collect definitions of constructs and relationships from the literature. \n- Make them atomic (i.e., split up long quotes into their basic components).\n- Assign a unique ID to each statement\n\nThis table will be called the \"Definitions\"\n\n<div class=\"table-grid\">\n| ID  | Construct Label | Quote | Reference | VAST type (n, p, i, r, ...) | Comment |\n| --- | --------------- | ----- | --------- | --------------------------- | ------- |\n| A   |                 |       |           |                             |         |\n| B   |                 |       |           |                             |         |\n| ... |                 |       |           |                             |         |\n\n</div>\n\n\n\n## Step 4: Distill a (consensus or working) definition for each construct\n\nDraw a VAST display with a naming `n` relationship.\nUse the ID from the \n\n## Step X: Choose a specific formalization\n\n\"Diffusion of responsibility\" (Darley & Latané, 1968): The presence of others reduces the likelihood of helping behavior in emergencies.\n\nBut how is it reduced exactly? [(see Forsyth et al., 2002)]{.smallest}:\n\n- Linear relationship?\n- A reduction in personal responsibility as groups increase in size but an eventual leveling off in larger groups?\n- Where does responsibility go when it diffuses in the group? Does it diffuse equally, with each member getting an equal portion, or is it concentrated on certain individuals?\n- \n\n::: footer\nE.g., Forsyth et al. ([2002](https://journals.sagepub.com/doi/10.1177/0146167202281005))\n:::\n\n<!-- Footer insert below -->\n\n\n\n\n# End\n\n## Contact\n\n<script src=\"https://kit.fontawesome.com/9fb269b0d2.js\" crossorigin=\"anonymous\"></script>\n\n<ul class=\"fa-ul\" style=\"color:black; list-style:none;\">\n\n<li><i class=\"fa-brands fa-li fa-mastodon\"></i> <a href=\"https://scicomm.xyz/@nicebread\" target=\"_blank\" style=\"color:black; border-bottom:none;\">@nicebread@scicomm.xyz</a></li>\n\n<li><i class=\"fa-li fa fa-envelope-o\"></i> <a style=\"unicode-bidi:bidi-override; direction: rtl; color:black\" href=\"javascript:window.location.href = 'mailto:' + ['felix.schoenbrodt','psy.lmu.de'].join('@')\">ed.uml.ysp@tdorbneohcs.xilef</a></li>\n\n<li><i class=\"fa-li fa-solid fa-globe\"></i> <a href=\"https://www.nicebread.de\" target=\"_blank\" style=\"color:black; border-bottom:none;\">https://www.nicebread.de</a></li>\n\n\n<li><i class=\"fa-li fa fa-github\" aria-hidden=\"true\"></i> <a href=\"https://github.com/nicebread\" target=\"_blank\" style=\"color:black; border-bottom:none;\">https://github.com/nicebread</a></li>\n</ul>\n\n<small style=\"text-align:left;\">\n\n\n[![CC-BY-SA 4.0][cc-by-sa-image]][cc-by-sa]\n\n[cc-by-sa]: http://creativecommons.org/licenses/by-sa/4.0/\n[cc-by-sa-image]: https://licensebuttons.net/l/by-sa/4.0/88x31.png\n[cc-by-sa-shield]: https://img.shields.io/badge/License-CC%20BY%20SA4.0-lightgrey.svg\n\n</small>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}